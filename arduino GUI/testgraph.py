# -*- coding: utf-8 -*-
"""
Created on Tue Aug 31 09:18:59 2021

@author: LEOS-7
"""

# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'final.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from matplotlib import style

from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT as NavigationToolbar
from matplotlib.figure import Figure

import time
import serial
import serial.tools.list_ports as ps

#------------------------------------------------------------------------------------------
# class definition for the graphs:

class MplCanvas(FigureCanvasQTAgg):
        
    def __init__(self, parent=None, width=5, height=4, dpi=100):
        fig = Figure(figsize=(width, height), dpi=dpi)
        self.axes = fig.add_subplot(111)
        # self.axes.FigureCanvas
        super(MplCanvas, self).__init__(fig)
        
        
#------------------------------------------------------------------------------------------
# the parallel thread:
    
class Worker(QRunnable):
    def __init__(self, fn, *args, **kwargs):
        super(Worker,self).__init__()
        self.fn = fn
        self.args = args
        self.kwargs = kwargs
        
    @pyqtSlot()
    def run(self):
        '''
        Your code goes in this function
        '''
        self.fn(*self.args, **self.kwargs)

#------------------------------------------------------------------------------------------
# GUI design class, the MAIN THREAD:
    
class Ui_MainWindow(object):
    def __init__(self, *args, **kwargs):
        super(Ui_MainWindow, self).__init__(*args, **kwargs)
        self.threadpool = QThreadPool()
        print("Multithreading with maximum %d threads" % self.threadpool.maxThreadCount())
      
        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1700, 800)
        font = QtGui.QFont()
        font.setPointSize(12)
        MainWindow.setFont(font)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.G_meterValues = QtWidgets.QGroupBox(self.centralwidget)
        self.G_meterValues.setGeometry(QtCore.QRect(600, 60, 1091, 261))
        self.G_meterValues.setObjectName("G_meterValues")
        self.L_dspgrph = QtWidgets.QLabel(self.G_meterValues)
        self.L_dspgrph.setGeometry(QtCore.QRect(10, 40, 400, 31))
        self.L_dspgrph.setText('Display graph:')
        self.L_meter1v = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter1v.setGeometry(QtCore.QRect(150, 120, 131, 51))
        self.L_meter1v.setStyleSheet("background-color:white;")
        self.L_meter1v.setText("")
        self.L_meter1v.setObjectName("L_meter1v")
        self.L_meter2v = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter2v.setGeometry(QtCore.QRect(420, 120, 131, 51))
        self.L_meter2v.setStyleSheet("background-color:white;")
        self.L_meter2v.setText("")
        self.L_meter2v.setObjectName("L_meter2v")
        self.L_meter3v = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter3v.setGeometry(QtCore.QRect(660, 120, 131, 51))
        self.L_meter3v.setStyleSheet("background-color:white;")
        self.L_meter3v.setText("")
        self.L_meter3v.setObjectName("L_meter3v")
        self.L_meter4v = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter4v.setGeometry(QtCore.QRect(890, 120, 131, 51))
        self.L_meter4v.setStyleSheet("background-color:white;")
        self.L_meter4v.setText("")
        self.L_meter4v.setObjectName("L_meter4v")
        self.L_meter1head = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter1head.setGeometry(QtCore.QRect(150, 80, 131, 41))
        self.L_meter1head.setAlignment(QtCore.Qt.AlignCenter)
        self.L_meter1head.setObjectName("L_meter1head")
        self.L_meter2head = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter2head.setGeometry(QtCore.QRect(420, 80, 131, 41))
        self.L_meter2head.setAlignment(QtCore.Qt.AlignCenter)
        self.L_meter2head.setObjectName("L_meter2head")
        self.L_meter3head = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter3head.setGeometry(QtCore.QRect(660, 80, 131, 41))
        self.L_meter3head.setAlignment(QtCore.Qt.AlignCenter)
        self.L_meter3head.setObjectName("L_meter3head")
        self.L_meter4head = QtWidgets.QLabel(self.G_meterValues)
        self.L_meter4head.setGeometry(QtCore.QRect(890, 80, 131, 41))
        self.L_meter4head.setAlignment(QtCore.Qt.AlignCenter)
        self.L_meter4head.setObjectName("L_meter4head")
        self.B_begin = QtWidgets.QPushButton(self.G_meterValues)
        self.B_begin.setGeometry(QtCore.QRect(30, 190, 131, 41))
        self.B_begin.setObjectName("B_begin")
        self.G_connectionstat = QtWidgets.QGroupBox(self.centralwidget)
        self.G_connectionstat.setGeometry(QtCore.QRect(30, 60, 550, 261))
        self.G_connectionstat.setObjectName("G_connectionstat")
        self.L_comport = QtWidgets.QLabel(self.G_connectionstat)
        self.L_comport.setGeometry(QtCore.QRect(30, 70, 111, 31))
        self.L_comport.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.L_comport.setObjectName("L_comport")
        # self.E_comport = QtWidgets.QLineEdit(self.G_connectionstat)
        # self.E_comport.setGeometry(QtCore.QRect(140, 71, 113, 31))
        # self.E_comport.setObjectName("E_comport")
        self.B_connect = QtWidgets.QPushButton(self.G_connectionstat)
        self.B_connect.setGeometry(QtCore.QRect(20, 190, 131, 41))
        self.B_connect.setObjectName("B_connect")
        self.label = QtWidgets.QLabel(self.G_connectionstat)
        self.label.setGeometry(QtCore.QRect(40, 140, 111, 31))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.G_connectionstat)
        self.label_2.setGeometry(QtCore.QRect(140, 135, 171, 31))
        self.label_2.setStyleSheet("background-color:white;")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(self.G_connectionstat)
        self.pushButton.setGeometry(QtCore.QRect(160, 190, 131, 41))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1600, 34))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
#------------------------------------------------------------------------------------------
        # Graph One
        
        self.G_graph = QtWidgets.QGroupBox(self.centralwidget)
        self.G_graph.setGeometry(QtCore.QRect(30, 325, 500, 500))
        self.G_graph.setObjectName("G_graph")
        self.G_graph.setTitle("meter 1")
        
        
        
        self.sc = MplCanvas(self.G_graph, width=5, height=5, dpi=100)
        toolbar = NavigationToolbar(self.sc, self.G_graph)
        layout = QtWidgets.QVBoxLayout()          
        layout.addWidget(toolbar)
        layout.addWidget(self.sc)
        widget = QtWidgets.QWidget(self.G_graph)
        widget.setGeometry(1, 15, 450, 450)
        widget.setLayout(layout)
       
        
#------------------------------------------------------------------------------------------
        # Graph Two
        
        self.G_graph2 = QtWidgets.QGroupBox(self.centralwidget)
        self.G_graph2.setGeometry(QtCore.QRect(600, 325, 500, 500))
        self.G_graph2.setObjectName("G_graph2")
        self.G_graph2.setTitle("meter2")
    
        self.sc2 = MplCanvas(self.G_graph2, width=5, height=4, dpi=100)      
        toolbar2 = NavigationToolbar(self.sc2, self.G_graph2)
        layout2 = QtWidgets.QVBoxLayout() 
        layout2.addWidget(toolbar2)
        layout2.addWidget(self.sc2)
        widget = QtWidgets.QWidget(self.G_graph2)
        widget.setGeometry(1, 15, 450, 450)
        widget.setLayout(layout2)
#------------------------------------------------------------------------------------------
    
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        
#------------------------------------------------------------------------------------------
        # connecting to the arduino:
            
        self.B_connect.clicked.connect(self.arduinoConnect)
        self.pushButton.clicked.connect(self.ardclose)
        
        self.B_begin.clicked.connect(self.senderfunc)
        
#------------------------------------------------------------------------------------------
        # for combo box:    
            
        # CONNECTION TO COM PORTS:
        
        self.the_ports = ps.comports()
        self.newcombo = QtWidgets.QComboBox(self.G_connectionstat)
        self.newcombo.setGeometry(QtCore.QRect(140, 70, 400, 31))
        self.newcombo.setObjectName('newcombo')
        self.newcombo.addItem('select the com')
        for i in self.the_ports:
            self.newcombo.addItem(str(i))
            
            
        # CHANGING THE GRAPH:
        self.combo1 = QtWidgets.QComboBox(self.G_meterValues)
        self.combo1.setGeometry(QtCore.QRect(147, 40, 400, 31))
        self.combo1.setObjectName('newcombo')  
        self.combo1.addItem('For readings')
        self.combo1.addItem('After readings')
        self.combo1.addItem('All four readings')
        
#------------------------------------------------------------------------------------------
       # saving the readings
       
        self.G_savtxt = QtWidgets.QGroupBox(self.centralwidget)
        self.G_savtxt.setGeometry(QtCore.QRect(1130, 325, 360, 500))
        self.G_savtxt.setObjectName("G_savtxt")
        self.G_savtxt.setTitle("save file") 
        self.E_filename = QtWidgets.QLineEdit(self.G_savtxt)
        self.E_filename.setGeometry(10, 40, 250, 31)
        self.B_save = QtWidgets.QPushButton(self.G_savtxt)
        self.B_save.setGeometry(10, 100, 100, 30)
        self.B_save.setText('save file')
        
#-----------------------------------------------------------------------------------------
       
    def arduinoConnect(self):
        try:
            stat = str(self.newcombo.currentText())[:4]
            self.ard = serial.Serial(stat,9600)
            self.label_2.setText('connection formed')
        except:
            self.label_2.setText('not proper')
            
    def ardclose(self):
        self.ard.close()
        self.L_meter1v.setText(" ")
        self.L_meter2v.setText("")
        self.L_meter3v.setText("")
        self.L_meter4v.setText("")


    def bringVals(self):
         x,y,z,w=[],[],[],[]
         c=1
         while True: 
            
            self.var = [0,0,0,0]
            self.ard.write(b'1')
            self.var[0] = self.ard.readline().decode('utf-8')
            self.ard.write(b'2')
            self.var[1] = self.ard.readline().decode('utf-8')
            self.ard.write(b'3')
            self.var[2] = self.ard.readline().decode('utf-8')
            self.ard.write(b'4')
            self.var[3] = self.ard.readline().decode('utf-8')
            self.L_meter1v.setText(str(self.var[0]))
            self.L_meter2v.setText(str(self.var[1]))
            self.L_meter3v.setText(str(self.var[2]))
            self.L_meter4v.setText(str(self.var[3]))
            self.sc.axes.clear()
            self.sc2.axes.clear()
            
            x.append(int(self.var[0]))
            y.append(int(self.var[1]))
            z.append(int(self.var[2]))
            w.append(int(self.var[3]))
            
            if self.combo1.currentText() == 'For readings':
                self.G_graph.setTitle('HH meter 1')
                self.G_graph2.setTitle('HU meter 2')
                self.sc.axes.plot(x, color='violet', linewidth=1.0)
                self.sc2.axes.plot(y, color='orange', linewidth=1.0)
                
            elif self.combo1.currentText() == 'After readings':
                self.G_graph.setTitle('HH meter 3')
                self.G_graph2.setTitle('HU meter 4')
                self.sc.axes.plot(z,linewidth=1.0)
                self.sc2.axes.plot(w, color='g', linewidth=1.0)
                
            elif self.combo1.currentText() == 'All four readings':
                self.G_graph.setTitle('HH meter 1 and 3')
                self.G_graph2.setTitle('HU meter 2 and 4')
                self.sc.axes.plot(z,linewidth=1.0, color='r')
                self.sc.axes.plot(x,linewidth=1.0, color='b')
                self.sc2.axes.plot(w, color='r', linewidth=1.0)
                self.sc2.axes.plot(y, color='b', linewidth=1.0)
               
            self.sc.draw()
            self.sc2.draw()
            
            time.sleep(1)
#-----------------------------------------------------------------------------------------
    # GATEWAY TO PARALLEL THREAD ( Worker class)
         
    def senderfunc(self):
         worker = Worker(self.bringVals)
         self.threadpool.start(worker)

#-----------------------------------------------------------------------------------------

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "arduino Gui interface final"))
        self.G_meterValues.setTitle(_translate("MainWindow", "Meter Values"))
        self.L_meter1head.setText(_translate("MainWindow", "Meter 1"))
        self.L_meter2head.setText(_translate("MainWindow", "Meter 2"))
        self.L_meter3head.setText(_translate("MainWindow", "Meter 3"))
        self.L_meter4head.setText(_translate("MainWindow", "Meter 4"))
        self.B_begin.setText(_translate("MainWindow", "Begin"))
        self.G_connectionstat.setTitle(_translate("MainWindow", "connection status"))
        self.L_comport.setText(_translate("MainWindow", "COM port : "))
        self.B_connect.setText(_translate("MainWindow", "Connect"))
        self.label.setText(_translate("MainWindow", "status      :"))
        self.pushButton.setText(_translate("MainWindow", "Close Port"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())